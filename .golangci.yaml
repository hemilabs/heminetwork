version: "2"
run:
  tests: false
  go: "1.23"

issues:
  max-issues-per-linter: 0
  max-same-issues: 0

linters:
  enable:
    - "asasalint" # Check for pass []any as any in variadic func(...any).
    - "bodyclose" # Checks whether HTTP response body is closed successfully.
    - "dupword" # Checks for duplicate words in the source code.
    - "errcheck" # Checks for unchecked errors.
    - "errorlint" # Verifies errors are properly wrapped.
    - "errname" # Checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error.
    - "gocheckcompilerdirectives" # Checks that go compiler directive comments (//go:) are valid.
    - "gochecksumtype" # Run exhaustiveness checks on Go "sum types".
    # TODO enable gosec, when bored run 'golangci-lint run -Egosec' to fix these
    # - "gosec" # Checks for potential security issues
    - "gomoddirectives" # Manages 'replace', 'retract' and 'excludes' directives in go.mod.
    - "gosmopolitan" # Report certain i18n/l10n anti-patterns in your Go codebase.
    - "govet" # Runs go vet.
    - "ineffassign" # Detects when assignments to variables are not used.
    # TODO enable revive, when bored run 'golangci-lint run -Erevive' to fix these
    # - "revive" # Miscellaneous linter
    - "nilerr" # Finds the code that returns nil even if it checks that the error is not nil.
    - "nolintlint" # Reports ill-formed or insufficient nolint directives.
    - "prealloc" # Finds slice declarations that could potentially be pre-allocated.
    - "predeclared" # Find code that shadows one of Go's predeclared identifiers.
    - "promlinter" # Check Prometheus metrics naming via promlint.
    - "staticcheck" # Runs staticcheck.
    - "sqlclosecheck" # Checks that sql.Rows, sql.Stmt, sqlx.NamedStmt, pgx.Query are closed.
    - "rowserrcheck" # Checks whether Rows.Err of rows is checked successfully.
    - "unconvert" # Checks for unnecessary type conversions.
    - "unused" # Checks for unused constants, variables, functions and types.
  settings:
    errcheck:
      exclude-functions:
        - "loggo.ConfigureLoggers(string)"
    gocritic:
      disabled-checks:
        - "elseif"
        - "exitAfterDefer"
        - "ifElseChain"
        - "singleCaseSwitch"
    godox: # Finds todo comments; Use: golangci-lint run --enable-only godox
      keywords:
        - "XXX"
        - "TODO"
        - "FIXME"
    gomoddirectives:
      replace-allow-list:
        - "github.com/coder/websocket" # Currently uses our fork with a bug fix.
    nolintlint:
      # Require an explanation after each nolint directive.
      # Explanation format example: '//nolint:ineffassign // Explanation goes here.'
      # If this becomes too annoying, disable it.
      require-explanation: true
  exclusions:
    generated: "strict"
    presets:
      - "comments"
      - "common-false-positives"
      - "legacy"
      - "std-error-handling"
    rules:
      - linters: [ "staticcheck" ]
        text: "QF1001:" # "could apply De Morgan's law"
      - linters: [ "staticcheck" ]
        text: "QF1007:" # "could merge conditional assignment into var declaration"
    paths:
      - "third_party$"
      - "builtin$"
      - "examples$"

formatters:
  enable:
    - "gci" # Enforces package import order, making it deterministic.
    - "gofumpt" # An extended version of go fmt.
  settings:
    gci:
      sections:
        - "standard"
        - "default"
        - "blank"
        - "dot"
        - "localmodule"
      custom-order: true
  exclusions:
    paths:
      - "third_party$"
      - "builtin$"
      - "examples$"
